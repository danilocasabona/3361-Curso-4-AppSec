name: TruffleHog Scan Test

on:
  pull_request:
    branches:
      - main

permissions:
  issues: write # ✅ Permite criar issues no repositório

jobs:
  trufflehog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run TruffleHog
        run: |
          output=$(docker run --rm -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github \
            --repo https://github.com/danilocasabona/3361-Curso-4-AppSec \
            --exclude-paths=/pwd/trufflehogs-exclude-path.txt)
          
          echo "$output" > trufflehog-results.txt  # Salva saída em um arquivo
          
          if echo "$output" | grep -q "Found"; then
            echo "SECRETS_FOUND=true" >> $GITHUB_ENV
          else
            echo "SECRETS_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Create an Issue if secrets are found
        if: env.SECRETS_FOUND == 'true'
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/danilocasabona/3361-Curso-4-AppSec/issues \
            -d '{
              "title": "⚠️ TruffleHog Encontrou Segredos!",
              "body": "🚨 O TruffleHog detectou credenciais ou segredos no código!\n\n🔎 **Workflow**: TruffleHog Scan Test\n❌ **Status**: Segredos encontrados\n👤 **Autor**: @${{ github.actor }}\n\n🔗 [Clique aqui para ver os detalhes](${{ github.event.workflow_run.html_url }})\n\n⚠️ **Revise os arquivos e remova informações sensíveis antes de prosseguir!**",
              "labels": ["security", "trufflehog", "high-priority"]
            }'
